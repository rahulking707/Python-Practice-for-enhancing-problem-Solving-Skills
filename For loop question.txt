# a=int(input())
# b=int(input())
# for i in range(a,b+1,1):
#     print(i)

# a=int(input())
# b=int(input())
# for i in range(a,b+1,1):
#     if i%3==0:
#       print(i)

# a=int(input())
# b=int(input())
# if a%3==0:
#     s=a
# elif a%3==1:
#     s=a+2
# else:
#     s=a+1
# for i in range(s,b+1,3):
#     print(i)

# n=int(input())
# i=2
# tag=False
# while i<=n:
#     if n%2==0:
#         tag=True
#     if n==2:
#         tag=False
#     i+=1
# if tag:
#     print('not prime')
# else:
#     print("prime")

# n=int(input())
# falge=False
# for i in range(2,n,1):
#     if n%i==0:
#         flage=True
# if falge:
#   print("not prime")
# else:
#   print("prime")



# n=int(input())
# i=1
# while i<=n:
#     j=1
#     while j<=n-i:
#         print(" ",end=" ")
#         j+=1
#     s=1
#     while s<=i:
#         print(i+s-1,end=" ")
#         s+=1
#     d=i-1
#     while d>=1:
#         print(d+i-1,end=" ")
#         d-=1    
#     i+=1
#     print()


# 4
#       1 
#     2 3 2
#   3 4 5 4 3
# 4 5 6 7 6 5 4
# n=int(input())
# for i in range(1,n+1,1):
#     for j in range(n-i):
#         print(" ",end=" ")
#     for m in range(i,2*i,1):
#         print(m,end=" ")
#     for u in range (2*i-2*1,i-1,-1):
#       print(u,end=" ")
#     print()

# prime number using break 
# n=int(input())
# i=2
# flage=False
# while i<n:
#     if n%i==0:
#       flage=True
#       break
#     i+=1
# if flage==True:
#   print(n,": not prime")
# else:
#   print(n,": prime")

  

# prime number with for loop
# n=int(input())
# i=2
# f=False
# for i in range(i,n,1):
#     if n%i==0:
#         f=True
#         break
# if f==True:
#     print("not prime") 
# else:
#     print("prime")   


# n=int(input())
# i=2
# while i<=n:
#     j=2
#     flage=False
#     while j<i:
#         if i%j==0:
#             flage=True
#             break
            
#         j+=1
#     if (not(flage)):
#         print(i)
#     i+=1

# else statement work
# prime number without flage:
# n=int(input())

# for j in range(2,n,1):
#     if n%j==0:
#         break
# else:
#     print("prime number")
      

# continue
# n=int(input())
# i=2
# while i<=n:
#     if i%7==0:
#         i+=2
#         continue
#     print(i)
#     i+=2


# 4nnn``
# 1 1 1 1 
# 0 0 0
# 1 1
# 0
# n=int(input())
# for i in range(1,n+1):
#     for j in range(i,n+1):
#         if i%2==0:
#             print("0",end=" ")
#         else:
#             print("1",end=" ")
#     print()      


# n=int(input())
# li=[]
# for i in range(n):
#     li.append(int(input()))
# print(li)
    

# s="12345"
# p=s.split(",")
# print(p)
# li=[]
# for i in p:
#     li.append(int(i))
# print(li)

# li=[str(x) for x in input().split()]
# print(li)

# n=int(input())
# li=[int(x) for x in input().split()]
# print(li)
# for i in li:
#     print(i)



# LINEAR SEARCHING IN LIST
# n=int(input())
# li=[int(i) for i in input().split()]
# print(li)
# e=int(input())
# isfound=False
# for x in range(len(li)):
#     if li[x]==e:
#         # print(x)
#         isfound=True
#         break
# if isfound is False:
#     print(-1)
# else:
#     print(x)

# LINEAR SEARCH TROUGH FUCTION
# def linear_fuc(li,ele):
#     for i in range(len(li)):
#         if li[i]==ele:
#             return i
#     return -1
# li=[1,2,3,4,5,6]
# index=linear_fuc(li,50)
# print(index)\

# pip install pygame


# import pygame
# import sys

# # Initialize Pygame
# pygame.init()

# # Constants
# WIDTH, HEIGHT = 800, 600
# MAN_WIDTH, MAN_HEIGHT = 50, 100
# WHITE = (255, 255, 255)
# BLUE = (0, 0, 255)

# # Create the screen
# screen = pygame.display.set_mode((WIDTH, HEIGHT))
# pygame.display.set_caption("Moving Man")

# # Initial position of the man
# man_x, man_y = WIDTH // 2 - MAN_WIDTH // 2, HEIGHT - MAN_HEIGHT

# # Man's movement speed
# man_speed = 5

# # Game loop
# running = True
# while running:
#     for event in pygame.event.get():
#         if event.type == pygame.QUIT:
#             running = False

#     # Check for key presses to move the man
#     keys = pygame.key.get_pressed()
#     if keys[pygame.K_LEFT]:
#         man_x -= man_speed
#     if keys[pygame.K_RIGHT]:
#         man_x += man_speed
#     if keys[pygame.K_UP]:
#         man_y -= man_speed
#     if keys[pygame.K_DOWN]:
#         man_y += man_speed

#     # Fill the screen with white
#     screen.fill(WHITE)

#     # Draw the man
#     pygame.draw.rect(screen, BLUE, (man_x, man_y, MAN_WIDTH, MAN_HEIGHT))

#     # Update the display
#     pygame.display.flip()

# # Quit Pygame
# pygame.quit()
# sys.exit()
def bubble_sort(arr):
    length=len(arr)
  
    for i in range(length-1):
        
        for j in range(length-1-i):
            if arr[j]>arr[j+1]:
                arr[j],arr[j+1]=arr[j+1],arr[j]
arr=[int(x) for x in input().split()]
bubble_sort(arr)
print(arr)